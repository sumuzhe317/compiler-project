Terminals unused in grammar

    T_CONST
    T_COMMA
    T_L_SQUARE
    T_R_SQUARE
    T_EQUAL
    T_VOID
    T_IF
    T_ELSE
    T_WHILE
    T_BREAK
    T_CONTINUE
    T_LESS
    T_GREATER
    T_LESSEQUAL
    T_GREATEREQUAL
    T_EQUALEQUAL
    T_EXCLAIMEQUAL
    T_AMPAMP
    T_PIPEPIPE


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: CompUnit CompUnitItem
    2         | CompUnitItem

    3 CompUnitItem: VarDecl
    4             | FuncDef

    5 VarDecl: T_INT T_IDENTIFIER T_SEMI

    6 FuncDef: T_INT T_IDENTIFIER T_L_PAREN T_R_PAREN Block

    7 Block: T_L_BRACE T_R_BRACE
    8      | T_L_BRACE BlockItem T_R_BRACE

    9 BlockItem: Stmt

   10 Stmt: T_RETURN EXP T_SEMI

   11 UnaryOp: T_MINUS
   12        | T_PLUS
   13        | T_EXCLAIM

   14 UnaryExp: PrimaryExp
   15         | UnaryOp UnaryExp

   16 Number: T_NUMERIC_CONSTANT

   17 PrimaryExp: T_L_PAREN EXP T_R_PAREN
   18           | Number

   19 MulExp: UnaryExp
   20       | MulExp T_STAR UnaryExp
   21       | MulExp T_SLASH UnaryExp
   22       | MulExp T_PERCENT UnaryExp

   23 EXP: MulExp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_CONST (258)
    T_COMMA (259)
    T_SEMI (260) 5 10
    T_INT (261) 5 6
    T_L_SQUARE (262)
    T_R_SQUARE (263)
    T_EQUAL (264)
    T_L_BRACE (265) 7 8
    T_R_BRACE (266) 7 8
    T_IDENTIFIER (267) 5 6
    T_L_PAREN (268) 6 17
    T_R_PAREN (269) 6 17
    T_VOID (270)
    T_IF (271)
    T_ELSE (272)
    T_WHILE (273)
    T_BREAK (274)
    T_CONTINUE (275)
    T_RETURN (276) 10
    T_NUMERIC_CONSTANT (277) 16
    T_PLUS (278) 12
    T_MINUS (279) 11
    T_EXCLAIM (280) 13
    T_STAR (281) 20
    T_SLASH (282) 21
    T_PERCENT (283) 22
    T_LESS (284)
    T_GREATER (285)
    T_LESSEQUAL (286)
    T_GREATEREQUAL (287)
    T_EQUALEQUAL (288)
    T_EXCLAIMEQUAL (289)
    T_AMPAMP (290)
    T_PIPEPIPE (291)


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    CompUnit (38)
        on left: 1 2
        on right: 0 1
    CompUnitItem (39)
        on left: 3 4
        on right: 1 2
    VarDecl (40)
        on left: 5
        on right: 3
    FuncDef (41)
        on left: 6
        on right: 4
    Block (42)
        on left: 7 8
        on right: 6
    BlockItem (43)
        on left: 9
        on right: 8
    Stmt (44)
        on left: 10
        on right: 9
    UnaryOp (45)
        on left: 11 12 13
        on right: 15
    UnaryExp (46)
        on left: 14 15
        on right: 15 19 20 21 22
    Number (47)
        on left: 16
        on right: 18
    PrimaryExp (48)
        on left: 17 18
        on right: 14
    MulExp (49)
        on left: 19 20 21 22
        on right: 20 21 22 23
    EXP (50)
        on left: 23
        on right: 10 17


State 0

    0 $accept: • CompUnit $end

    T_INT  shift, and go to state 1

    CompUnit      go to state 2
    CompUnitItem  go to state 3
    VarDecl       go to state 4
    FuncDef       go to state 5


State 1

    5 VarDecl: T_INT • T_IDENTIFIER T_SEMI
    6 FuncDef: T_INT • T_IDENTIFIER T_L_PAREN T_R_PAREN Block

    T_IDENTIFIER  shift, and go to state 6


State 2

    0 $accept: CompUnit • $end
    1 CompUnit: CompUnit • CompUnitItem

    $end   shift, and go to state 7
    T_INT  shift, and go to state 1

    CompUnitItem  go to state 8
    VarDecl       go to state 4
    FuncDef       go to state 5


State 3

    2 CompUnit: CompUnitItem •

    $default  reduce using rule 2 (CompUnit)


State 4

    3 CompUnitItem: VarDecl •

    $default  reduce using rule 3 (CompUnitItem)


State 5

    4 CompUnitItem: FuncDef •

    $default  reduce using rule 4 (CompUnitItem)


State 6

    5 VarDecl: T_INT T_IDENTIFIER • T_SEMI
    6 FuncDef: T_INT T_IDENTIFIER • T_L_PAREN T_R_PAREN Block

    T_SEMI     shift, and go to state 9
    T_L_PAREN  shift, and go to state 10


State 7

    0 $accept: CompUnit $end •

    $default  accept


State 8

    1 CompUnit: CompUnit CompUnitItem •

    $default  reduce using rule 1 (CompUnit)


State 9

    5 VarDecl: T_INT T_IDENTIFIER T_SEMI •

    $default  reduce using rule 5 (VarDecl)


State 10

    6 FuncDef: T_INT T_IDENTIFIER T_L_PAREN • T_R_PAREN Block

    T_R_PAREN  shift, and go to state 11


State 11

    6 FuncDef: T_INT T_IDENTIFIER T_L_PAREN T_R_PAREN • Block

    T_L_BRACE  shift, and go to state 12

    Block  go to state 13


State 12

    7 Block: T_L_BRACE • T_R_BRACE
    8      | T_L_BRACE • BlockItem T_R_BRACE

    T_R_BRACE  shift, and go to state 14
    T_RETURN   shift, and go to state 15

    BlockItem  go to state 16
    Stmt       go to state 17


State 13

    6 FuncDef: T_INT T_IDENTIFIER T_L_PAREN T_R_PAREN Block •

    $default  reduce using rule 6 (FuncDef)


State 14

    7 Block: T_L_BRACE T_R_BRACE •

    $default  reduce using rule 7 (Block)


State 15

   10 Stmt: T_RETURN • EXP T_SEMI

    T_L_PAREN           shift, and go to state 18
    T_NUMERIC_CONSTANT  shift, and go to state 19
    T_PLUS              shift, and go to state 20
    T_MINUS             shift, and go to state 21
    T_EXCLAIM           shift, and go to state 22

    UnaryOp     go to state 23
    UnaryExp    go to state 24
    Number      go to state 25
    PrimaryExp  go to state 26
    MulExp      go to state 27
    EXP         go to state 28


State 16

    8 Block: T_L_BRACE BlockItem • T_R_BRACE

    T_R_BRACE  shift, and go to state 29


State 17

    9 BlockItem: Stmt •

    $default  reduce using rule 9 (BlockItem)


State 18

   17 PrimaryExp: T_L_PAREN • EXP T_R_PAREN

    T_L_PAREN           shift, and go to state 18
    T_NUMERIC_CONSTANT  shift, and go to state 19
    T_PLUS              shift, and go to state 20
    T_MINUS             shift, and go to state 21
    T_EXCLAIM           shift, and go to state 22

    UnaryOp     go to state 23
    UnaryExp    go to state 24
    Number      go to state 25
    PrimaryExp  go to state 26
    MulExp      go to state 27
    EXP         go to state 30


State 19

   16 Number: T_NUMERIC_CONSTANT •

    $default  reduce using rule 16 (Number)


State 20

   12 UnaryOp: T_PLUS •

    $default  reduce using rule 12 (UnaryOp)


State 21

   11 UnaryOp: T_MINUS •

    $default  reduce using rule 11 (UnaryOp)


State 22

   13 UnaryOp: T_EXCLAIM •

    $default  reduce using rule 13 (UnaryOp)


State 23

   15 UnaryExp: UnaryOp • UnaryExp

    T_L_PAREN           shift, and go to state 18
    T_NUMERIC_CONSTANT  shift, and go to state 19
    T_PLUS              shift, and go to state 20
    T_MINUS             shift, and go to state 21
    T_EXCLAIM           shift, and go to state 22

    UnaryOp     go to state 23
    UnaryExp    go to state 31
    Number      go to state 25
    PrimaryExp  go to state 26


State 24

   19 MulExp: UnaryExp •

    $default  reduce using rule 19 (MulExp)


State 25

   18 PrimaryExp: Number •

    $default  reduce using rule 18 (PrimaryExp)


State 26

   14 UnaryExp: PrimaryExp •

    $default  reduce using rule 14 (UnaryExp)


State 27

   20 MulExp: MulExp • T_STAR UnaryExp
   21       | MulExp • T_SLASH UnaryExp
   22       | MulExp • T_PERCENT UnaryExp
   23 EXP: MulExp •

    T_STAR     shift, and go to state 32
    T_SLASH    shift, and go to state 33
    T_PERCENT  shift, and go to state 34

    $default  reduce using rule 23 (EXP)


State 28

   10 Stmt: T_RETURN EXP • T_SEMI

    T_SEMI  shift, and go to state 35


State 29

    8 Block: T_L_BRACE BlockItem T_R_BRACE •

    $default  reduce using rule 8 (Block)


State 30

   17 PrimaryExp: T_L_PAREN EXP • T_R_PAREN

    T_R_PAREN  shift, and go to state 36


State 31

   15 UnaryExp: UnaryOp UnaryExp •

    $default  reduce using rule 15 (UnaryExp)


State 32

   20 MulExp: MulExp T_STAR • UnaryExp

    T_L_PAREN           shift, and go to state 18
    T_NUMERIC_CONSTANT  shift, and go to state 19
    T_PLUS              shift, and go to state 20
    T_MINUS             shift, and go to state 21
    T_EXCLAIM           shift, and go to state 22

    UnaryOp     go to state 23
    UnaryExp    go to state 37
    Number      go to state 25
    PrimaryExp  go to state 26


State 33

   21 MulExp: MulExp T_SLASH • UnaryExp

    T_L_PAREN           shift, and go to state 18
    T_NUMERIC_CONSTANT  shift, and go to state 19
    T_PLUS              shift, and go to state 20
    T_MINUS             shift, and go to state 21
    T_EXCLAIM           shift, and go to state 22

    UnaryOp     go to state 23
    UnaryExp    go to state 38
    Number      go to state 25
    PrimaryExp  go to state 26


State 34

   22 MulExp: MulExp T_PERCENT • UnaryExp

    T_L_PAREN           shift, and go to state 18
    T_NUMERIC_CONSTANT  shift, and go to state 19
    T_PLUS              shift, and go to state 20
    T_MINUS             shift, and go to state 21
    T_EXCLAIM           shift, and go to state 22

    UnaryOp     go to state 23
    UnaryExp    go to state 39
    Number      go to state 25
    PrimaryExp  go to state 26


State 35

   10 Stmt: T_RETURN EXP T_SEMI •

    $default  reduce using rule 10 (Stmt)


State 36

   17 PrimaryExp: T_L_PAREN EXP T_R_PAREN •

    $default  reduce using rule 17 (PrimaryExp)


State 37

   20 MulExp: MulExp T_STAR UnaryExp •

    $default  reduce using rule 20 (MulExp)


State 38

   21 MulExp: MulExp T_SLASH UnaryExp •

    $default  reduce using rule 21 (MulExp)


State 39

   22 MulExp: MulExp T_PERCENT UnaryExp •

    $default  reduce using rule 22 (MulExp)
